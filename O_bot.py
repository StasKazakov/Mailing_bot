'''This is main module in project. This file must be run for the bot to work.'''
from pyrogram import Client
from Config import admin
from pyrogram.types import InputPhoneContact
import json
import tempfile
from Functions import *

# Text for mailing.
ads_text = '–í—ñ—Ç–∞—é! üëã –ú–æ–∂–ª–∏–≤–æ –≤–∞–º —Ü—ñ–∫–∞–≤–æ –Ω–∞–±—Ä–∞—Ç–∏ –±—ñ–ª—å—à–µ –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ —É –≤–∞—à—É —Ç–µ–ª–µ–≥—Ä–∞–º –≥—Ä—É–ø—É –π –æ—Ç—Ä–∏–º–∞—Ç–∏ –Ω–æ–≤–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤. –Ø–∫—â–æ —Ç–∞–∫, —Ç–æ —Ö–æ—á—É –≤–∞–º –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ —Ä–µ–∫–ª–∞–º—É —É @search7kmBot, —Ü–µ –±–æ—Ç –¥–ª—è –ø–æ—à—É–∫—É –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ —Ñ–æ—Ç–æ.\n\n–ó–∞—Ä–∞–∑ —É –±–æ—Ç–∞ 3500+ –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ —ñ –Ω–∞ 95 –≤—ñ–¥—Å–æ—Ç–∫—ñ–≤ —Ü–µ –∞–∫—Ç–∏–≤–Ω—ñ –¥—Ä–æ–ø—à–∏–ø–ø–µ—Ä–∏. –ö–æ–∂–µ–Ω –ø—ñ–¥–ø–∏—Å–Ω–∏–∫ –æ—Ç—Ä–∏–º–∞—î –≤–∞—à—É —Ä–µ–∫–ª–∞–º–Ω—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é —É –ø—Ä–∏–≤–∞—Ç–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—èüì©. –í–∞—Ä—Ç—ñ—Å—Ç—å —Ä–µ–∫–ª–∞–º–Ω–æ—ó —Ä–æ–∑—Å–∏–ª–∫–∏ 450 –≥—Ä–Ω.\n\n–í–∏ –º–æ–∂–µ—Ç–µ –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –±–æ—Ç–∞ —ñ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ –ø–æ–±–∞—á–∏—Ç–∏ —è–∫ –ø—Ä–∏—Ö–æ–¥—è—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ —è–∫—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –æ—Ç—Ä–∏–º—É—é—Ç—å —Ä–µ–∫–ª–∞–º–æ–¥–∞–≤—Ü—ñ. –î–æ —Ä–µ—á—ñ, –º–æ–∂—É –¥–æ–ª—É—á–∏—Ç–∏ –≤–∞—Å –¥–æ —Å–ø–∏—Å–∫—É –ø–æ—à—É–∫—É –±–æ—Ç–∞, —è–∫—â–æ –≤–∞—Å —â–µ –≤ –Ω—å–æ–º—É –Ω–µ–º–∞—î.'

app = Client("Olga")

# Function for recive Telegram id user.
async def get_user_id(phone_num):
    temp_contact_name = tempfile.NamedTemporaryFile().name.split('\\')[-1]
    good_res = list()
    with app:
        await app.import_contacts([InputPhoneContact(phone=phone_num, first_name=temp_contact_name)])
        contacts = await app.get_contacts()
        for contact in contacts:
            contact_data = json.loads(str(contact))
            if contact_data['first_name'] == temp_contact_name:
                good_res.append(contact_data)
                await app.delete_contacts(contact_data['id'])
    try:
        good_res = good_res[0]['id']
    except:
        good_res = None
    return good_res

# Hendler for caching messages.
@app.on_message()
async def my_handler(client, message):
    if message.chat.id == admin:
        if message.text.startswith('+'):
            query = message.text.split(' ')
            shop = query[1]
            contact = query[0]
            user_id = await get_user_id(contact)
            if user_id is not None:
                await app.send_message(user_id, ads_text)
                add_entry(shop, contact)
                record = [shop, contact]
                append_record(record)
                await app.send_message(admin, 'Message sent sucsessful!')
            else:
                await app.send_message(admin, 'Bad number')
        elif message.text.startswith('@'):
            query = message.text.split(' ')
            shop = query[1]
            contact = query[0]
            user_name = contact[1:]
            await app.send_message(user_name, ads_text)
            add_entry(shop, contact)
            record = [shop, contact]
            append_record(record)
            await app.send_message(admin, 'Message sent sucsessful!')
        elif message.text == 'stat':
            executed = get_data()
            table = ''
            for value in executed:
                row = str(value[0]) + ' ' + str(value[1]) + ' ' + str(value[2]) + '\n'
                table = table + row
            await app.send_message(admin, table)

    else:
        #await app.send_message(message.chat.id, '–í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–µ—Ä–µ–¥–∞–Ω–æ @staskazakovcom')
        await app.forward_messages(admin, message.chat.id, message.id)
app.run()

